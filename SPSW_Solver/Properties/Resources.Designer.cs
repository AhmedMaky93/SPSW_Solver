//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SPSW_Solver.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SPSW_Solver.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap _lock {
            get {
                object obj = ResourceManager.GetObject("_lock", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap about {
            get {
                object obj = ResourceManager.GetObject("about", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap about_1 {
            get {
                object obj = ResourceManager.GetObject("about_1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap back {
            get {
                object obj = ResourceManager.GetObject("back", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap beam {
            get {
                object obj = ResourceManager.GetObject("beam", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Completed_check {
            get {
                object obj = ResourceManager.GetObject("Completed_check", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap curve {
            get {
                object obj = ResourceManager.GetObject("curve", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;
        ///&lt;data-set xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;
        ///	&lt;ISection&gt;
        ///		&lt;Name&gt;W44X335&lt;/Name&gt;
        ///		&lt;A&gt;98.5&lt;/A&gt;
        ///		&lt;Ix&gt;31100&lt;/Ix&gt;
        ///		&lt;Iy&gt;1200&lt;/Iy&gt;
        ///		&lt;Bf&gt;15.9&lt;/Bf&gt;
        ///		&lt;D&gt;44&lt;/D&gt;
        ///		&lt;Tf&gt;1.77&lt;/Tf&gt;
        ///		&lt;Tw&gt;1.03&lt;/Tw&gt;
        ///	&lt;/ISection&gt;
        ///	&lt;ISection&gt;
        ///		&lt;Name&gt;W44X290&lt;/Name&gt;
        ///		&lt;A&gt;85.4&lt;/A&gt;
        ///		&lt;Ix&gt;27000&lt;/Ix&gt;
        ///		&lt;Iy&gt;1040&lt;/Iy&gt;
        ///		&lt;Bf&gt;15.8&lt;/Bf&gt;
        ///		&lt;D&gt;43.6&lt;/D&gt;
        ///		&lt;Tf&gt;1.58&lt;/Tf&gt;
        ///		&lt;Tw&gt;0.865&lt;/Tw&gt;
        ///	&lt;/ISection&gt;
        ///	&lt;ISection&gt;
        ///		&lt;Name&gt;W44X262&lt;/Name&gt;
        ///		&lt;A&gt;77.2&lt;/A&gt;
        ///		&lt;I [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Data {
            get {
                return ResourceManager.GetString("Data", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap DeadLoad {
            get {
                object obj = ResourceManager.GetObject("DeadLoad", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap earthquake {
            get {
                object obj = ResourceManager.GetObject("earthquake", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Elastic {
            get {
                object obj = ResourceManager.GetObject("Elastic", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ElasticPosNeg {
            get {
                object obj = ResourceManager.GetObject("ElasticPosNeg", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ElasticPP {
            get {
                object obj = ResourceManager.GetObject("ElasticPP", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ElasticPP1 {
            get {
                object obj = ResourceManager.GetObject("ElasticPP1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap eqe2917_fig_0001_m {
            get {
                object obj = ResourceManager.GetObject("eqe2917_fig_0001_m", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Error {
            get {
                object obj = ResourceManager.GetObject("Error", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap folder {
            get {
                object obj = ResourceManager.GetObject("folder", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Help {
            get {
                object obj = ResourceManager.GetObject("Help", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon hnet_com_image {
            get {
                object obj = ResourceManager.GetObject("hnet_com_image", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Hysteretic {
            get {
                object obj = ResourceManager.GetObject("Hysteretic", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap IBeam {
            get {
                object obj = ResourceManager.GetObject("IBeam", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon image {
            get {
                object obj = ResourceManager.GetObject("image", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;html&gt;
        ///
        ///&lt;head&gt;
        ///&lt;meta http-equiv=Content-Type content=&quot;text/html; charset=windows-1252&quot;&gt;
        ///&lt;meta name=Generator content=&quot;Microsoft Word 15 (filtered)&quot;&gt;
        ///&lt;style&gt;
        ///&lt;!--
        /// /* Font Definitions */
        /// @font-face
        ///	{font-family:Wingdings;
        ///	panose-1:5 0 0 0 0 0 0 0 0 0;}
        ///@font-face
        ///	{font-family:&quot;Cambria Math&quot;;
        ///	panose-1:2 4 5 3 5 4 6 3 2 4;}
        ///@font-face
        ///	{font-family:Calibri;
        ///	panose-1:2 15 5 2 2 2 4 3 2 4;}
        ///@font-face
        ///	{font-family:Tahoma;
        ///	panose-1:2 11 6 4 3 5 4 4 2 4;}
        /// /* Style Definitions */
        /// p.Ms [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string INSPECT_SPSW_ABOUT {
            get {
                return ResourceManager.GetString("INSPECT_SPSW_ABOUT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;html&gt;
        ///
        ///&lt;head&gt;
        ///&lt;meta http-equiv=Content-Type content=&quot;text/html; charset=windows-1252&quot;&gt;
        ///&lt;meta name=Generator content=&quot;Microsoft Word 15 (filtered)&quot;&gt;
        ///&lt;style&gt;
        ///&lt;!--
        /// /* Font Definitions */
        /// @font-face
        ///	{font-family:Wingdings;
        ///	panose-1:5 0 0 0 0 0 0 0 0 0;}
        ///@font-face
        ///	{font-family:&quot;Cambria Math&quot;;
        ///	panose-1:2 4 5 3 5 4 6 3 2 4;}
        ///@font-face
        ///	{font-family:Calibri;
        ///	panose-1:2 15 5 2 2 2 4 3 2 4;}
        ///@font-face
        ///	{font-family:Tahoma;
        ///	panose-1:2 11 6 4 3 5 4 4 2 4;}
        /// /* Style Definitions */
        /// p.Ms [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string INSPECT_SPSW_ACKNOWLEDEMNETS {
            get {
                return ResourceManager.GetString("INSPECT_SPSW_ACKNOWLEDEMNETS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;html&gt;
        ///
        ///&lt;head&gt;
        ///&lt;meta http-equiv=Content-Type content=&quot;text/html; charset=windows-1252&quot;&gt;
        ///&lt;meta name=Generator content=&quot;Microsoft Word 15 (filtered)&quot;&gt;
        ///&lt;style&gt;
        ///&lt;!--
        /// /* Font Definitions */
        /// @font-face
        ///	{font-family:Wingdings;
        ///	panose-1:5 0 0 0 0 0 0 0 0 0;}
        ///@font-face
        ///	{font-family:&quot;Cambria Math&quot;;
        ///	panose-1:2 4 5 3 5 4 6 3 2 4;}
        ///@font-face
        ///	{font-family:Calibri;
        ///	panose-1:2 15 5 2 2 2 4 3 2 4;}
        ///@font-face
        ///	{font-family:Tahoma;
        ///	panose-1:2 11 6 4 3 5 4 4 2 4;}
        /// /* Style Definitions */
        /// p.Ms [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string INSPECT_SPSW_LICENSE {
            get {
                return ResourceManager.GetString("INSPECT_SPSW_LICENSE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html&gt;
        ///&lt;!-- saved from url=(0054)https://opensees.berkeley.edu/wiki/index.php/Main_Page --&gt;
        ///&lt;html class=&quot;client-js&quot; lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;&lt;head&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;
        ///
        ///&lt;head&gt;
        ///&lt;title&gt;OpenSeesWiki&lt;/title&gt;
        ///
        ///&lt;/head&gt;
        ///&lt;body class=&quot;mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-Main_Page rootpage-Main_Page skin-monobook action-view&quot;&gt;
        ///&lt;h2&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;Welcome_to_the_OpenSeesWiki&quot;&gt;&lt;big&gt; &lt;b&gt;Welcome to the OpenSeesWiki&lt;/b&gt; &lt;/big&gt;&lt;/s [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string INSPECT_SPSW_OPENSEES {
            get {
                return ResourceManager.GetString("INSPECT_SPSW_OPENSEES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;html&gt;
        ///
        ///&lt;head&gt;
        ///&lt;meta http-equiv=Content-Type content=&quot;text/html; charset=windows-1252&quot;&gt;
        ///&lt;meta name=Generator content=&quot;Microsoft Word 15 (filtered)&quot;&gt;
        ///&lt;style&gt;
        ///&lt;!--
        /// /* Font Definitions */
        /// @font-face
        ///	{font-family:Wingdings;
        ///	panose-1:5 0 0 0 0 0 0 0 0 0;}
        ///@font-face
        ///	{font-family:&quot;Cambria Math&quot;;
        ///	panose-1:2 4 5 3 5 4 6 3 2 4;}
        ///@font-face
        ///	{font-family:Calibri;
        ///	panose-1:2 15 5 2 2 2 4 3 2 4;}
        ///@font-face
        ///	{font-family:Tahoma;
        ///	panose-1:2 11 6 4 3 5 4 4 2 4;}
        /// /* Style Definitions */
        /// p.Ms [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string INSPECT_SPSW_READ_ME {
            get {
                return ResourceManager.GetString("INSPECT_SPSW_READ_ME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to if {$ok != 0} {      
        ///# change some analysis parameters to achieve convergence
        ///# performance is slower inside this loop
        ///	set ok 0;
        ///	set controlDisp 0.0;		# start from zero
        ///	set D0 0.0;		# start from zero
        ///	set Dstep [expr ($controlDisp-$D0)/($Dmax-$D0)]
        ///	while {$Dstep &lt; 1.0 &amp;&amp; $ok == 0} {
        ///        set controlDisp 0.0;	
        ///        foreach x $Supports {
        ///            incr controlDisp [ nodeReaction $x $IDctrlDOF ];
        ///        }
        ///		set Dstep [expr ($controlDisp-$D0)/($Dmax-$D0)]
        ///		set ok [analyze 1 ]
        ///		if { [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LoadControlAlgorithm {
            get {
                return ResourceManager.GetString("LoadControlAlgorithm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] MaterialInfo {
            get {
                object obj = ResourceManager.GetObject("MaterialInfo", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to set nodes [getNodeTags];
        ///set ndf_max 3;
        ///set total_mass {0.0 0.0 0.0};
        ///set mass_labels {&quot;MX&quot; &quot;MY&quot; &quot;MRZ&quot;};
        ///set mass_labels1 {&quot;MODE&quot; &quot;MX&quot; &quot;MY&quot; &quot;MRZ&quot;};
        ///foreach node $nodes {
        ///		set indf [llength [nodeDisp $node]]
        ///		for {set i 0} {$i &lt; $indf} {incr i} {
        ///			set imass [nodeMass $node [expr $i+1]]
        ///			set imass_total [lindex $total_mass $i]
        ///			lset total_mass $i [expr $imass_total + $imass]
        ///		}
        ///	}
        ///set pi [expr acos(-1.0)];
        ///set lambdas [eigen $num_modes];
        ///record;
        ///set mode_data [lrepeat $num_modes [lrep [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ModalAnalysisScript {
            get {
                return ResourceManager.GetString("ModalAnalysisScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap model {
            get {
                object obj = ResourceManager.GetObject("model", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ModIKModel {
            get {
                object obj = ResourceManager.GetObject("ModIKModel", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap more {
            get {
                object obj = ResourceManager.GetObject("more", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to if {$ok != 0} {      ;					# if analysis was not successful.
        ///	# change some analysis parameters to achieve convergence
        ///	# performance is slower inside this loop
        ///	#    Time-controlled analysis
        ///	set ok 0;
        ///	set controlTime [getTime];
        ///	while {$controlTime &lt; $TmaxAnalysis &amp;&amp; $ok == 0} {
        ///		set ok [analyze 1 $DtAnalysis]
        ///		set controlTime [getTime]
        ///		set ok [analyze 1 $DtAnalysis]
        ///		if {$ok != 0} {
        ///			puts &quot;Trying Newton with Initial Tangent ..&quot;
        ///			test NormDispIncr   $Tol 1000  0
        ///			algorithm Newton  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MotionAlgorithm {
            get {
                return ResourceManager.GetString("MotionAlgorithm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap next {
            get {
                object obj = ResourceManager.GetObject("next", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Organize {
            get {
                object obj = ResourceManager.GetObject("Organize", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap parabola {
            get {
                object obj = ResourceManager.GetObject("parabola", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap pause {
            get {
                object obj = ResourceManager.GetObject("pause", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap play {
            get {
                object obj = ResourceManager.GetObject("play", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap play_button__1_ {
            get {
                object obj = ResourceManager.GetObject("play_button__1_", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap plus {
            get {
                object obj = ResourceManager.GetObject("plus", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap process {
            get {
                object obj = ResourceManager.GetObject("process", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap question {
            get {
                object obj = ResourceManager.GetObject("question", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap refresh {
            get {
                object obj = ResourceManager.GetObject("refresh", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # ---------------------------------- in case of convergence problems
        ///if {$ok != 0} {      
        ///# change some analysis parameters to achieve convergence
        ///# performance is slower inside this loop
        ///	set ok 0;
        ///	set controlDisp 0.0;		# start from zero
        ///	set D0 0.0;		# start from zero
        ///	set Dstep [expr ($controlDisp-$D0)/($Dmax-$D0)]
        ///	set Tol 1.0e-9;
        ///	set maxNumIter 100;
        ///	set TestType EnergyIncr;
        ///	set algorithmType Newton;
        ///	while {$Dstep &lt; 1.0 &amp;&amp; $ok == 0} {	
        ///		set controlDisp [nodeDisp $IDctrlNode $IDctrlDO [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RunMethods {
            get {
                return ResourceManager.GetString("RunMethods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Section {
            get {
                object obj = ResourceManager.GetObject("Section", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap seismic {
            get {
                object obj = ResourceManager.GetObject("seismic", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap seo_report {
            get {
                object obj = ResourceManager.GetObject("seo_report", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap sketch {
            get {
                object obj = ResourceManager.GetObject("sketch", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap start {
            get {
                object obj = ResourceManager.GetObject("start", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap statistics {
            get {
                object obj = ResourceManager.GetObject("statistics", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap steel {
            get {
                object obj = ResourceManager.GetObject("steel", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Steel01 {
            get {
                object obj = ResourceManager.GetObject("Steel01", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to proc WSec { FlangematIDhard  WebmatIDhard SecTag d  tw  bf tf nfbf nftf nftw nfdw} {
        ///   # nfdw 20	 number of fibers along web depth 
        ///   # nftw 1	 number of fibers along web thickness
        ///   # nfbf 25	 number of fibers along flange width (you want this many in a bi-directional loading)
        ///   # nftf 2	#number of fibers along flange thickness
        ///  
        ///  set dw [expr $d - 2 * $tf]
        ///  set y1 [expr -$d/2]
        ///  set y2 [expr -$dw/2]
        ///  set y3 [expr  $dw/2]
        ///  set y4 [expr  $d/2]
        ///  
        ///  set z1 [expr -$bf/2]
        ///  set z2 [expr - [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WSection2D {
            get {
                return ResourceManager.GetString("WSection2D", resourceCulture);
            }
        }
    }
}
